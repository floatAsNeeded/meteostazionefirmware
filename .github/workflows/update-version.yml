name: Update version.json on Release

on:
  release:
    types: [published]

jobs:
  update-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main # Explicitly check out main branch

      - name: Debug git status
        run: |
          git status
          git remote -v
          git branch -a
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Extract version from tag
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Get release assets
        id: assets
        run: |
          assets_json=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ steps.tag.outputs.tag }}")
          echo "assets_json<<EOF" >> $GITHUB_OUTPUT
          echo "$assets_json" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Parse assets and update JSON
        run: |
          # Ensure version.json exists
          if [ ! -f version.json ]; then
            echo '{"868":{"version":"0.0.0","url":""},"915":{"version":"0.0.0","url":""}}' > version.json
          fi
          # Read current version.json
          current_json=$(cat version.json)
          
          # Extract URLs for assets
          url_868=$(echo "${{ steps.assets.outputs.assets_json }}" | jq -r '.assets[] | select(.name == "meteostazionefirmware_receiver_868.ino.bin") | .browser_download_url // empty')
          url_915=$(echo "${{ steps.assets.outputs.assets_json }}" | jq -r '.assets[] | select(.name == "meteostazionefirmware_receiver_915.ino.bin") | .browser_download_url // empty')
          
          # Use current URLs if assets are missing
          url_868=${url_868:-$(echo "$current_json" | jq -r '.["868"].url')}
          url_915=${url_915:-$(echo "$current_json" | jq -r '.["915"].url')}
          
          # Validate at least one URL is present
          if [ -z "$url_868" ] && [ -z "$url_915" ]; then
            echo "Error: No assets found for 868 or 915 in release ${{ steps.tag.outputs.tag }}"
            exit 1
          fi
          
          # Clean version (remove 'v' prefix if present)
          version_clean=$(echo "${{ steps.tag.outputs.tag }}" | sed 's/^v//')
          
          # Update JSON with new version and URLs
          jq --arg version "$version_clean" \
             --arg url868 "$url_868" \
             --arg url915 "$url_915" \
             '.["868"].version = $version | .["868"].url = $url868 | .["915"].version = $version | .["915"].url = $url915' \
             version.json > version.json.new
          
          # Check if JSON changed
          if ! cmp -s version.json version.json.new; then
            mv version.json.new version.json
            echo "Updated version.json:"
            cat version.json
          else
            echo "No changes to version.json"
            rm version.json.new
            exit 0 # Exit early if no changes
          fi

      - name: Commit and push changes
        run: |
          git add version.json
          git commit -m "Update version.json for release ${{ steps.tag.outputs.tag }}"
          git push origin main


